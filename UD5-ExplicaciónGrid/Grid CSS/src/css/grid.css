html {
  box-sizing: border-box;
  font-size: 16px;
  font-family: sans-serif;
  scroll-behavior: smooth;
}

*,
*::after,
*::before {
  box-sizing: inherit;
}

a[href="#top"] {
  margin: 1rem;
  display: block;
  font-size: 2rem;
  text-align: center;
  text-decoration: none;
}

p {
  margin: 0;
}

h2 {
  margin-top: 50vh;
  text-align: center;
}

img {
  margin: auto;
  display: block;
  max-width: 100%;
  height: auto;
}

.menu {
  margin-bottom: 100vh;
  font-size: 125%;
}

.menu li {
  margin-bottom: 1rem;
}

.container {
  margin: 0 auto;
  width: 80%;
  height: 80vh;
  background-color: #222;
  border: medium solid #000;
}

.item {
  padding: 1rem;
  font-size: 1.25rem;
  background-color: #666;
  border: medium solid #999;
}

.sub-item {
  padding: 1rem;
  background-color: #ddd;
  border: medium solid #ccc;
}

section {
  width: 70%;
  margin: 2rem auto;
  padding: 1rem 0;
}

/* estilos de grid explicito */

.grid-explicit {
  display: grid;
  /* 3cx3r */
  grid-template-columns: 50% 100px 1fr;
  grid-template-rows: 2rem 20vh 30%;

  /* 5cx4r */
  grid-template-columns: 20% 20% 20% 20% 20%;
  grid-template-rows: 1fr 1fr 1fr 1fr;

  grid-template-columns: repeat(5, 20%);
  grid-template-rows: repeat(4, 1fr);
  
  grid-template-rows: repeat(4, auto);
  grid-template-rows: repeat(4, 1fr);
  
  column-gap: 1rem;
  row-gap: 2rem;
  /* gap: row-gap column-gap*/
  gap: 2rem 1rem;

  gap: 0;

  /* grid-template-columns: calc(20% - 1rem) repeat(2, calc(30% - 0.5rem)) calc(20% - 1rem); */

}

.grid-explicit .item:nth-child(10){
  background-color: red;
  grid-row-start: 2;
  grid-row-end: 3;
  grid-column-start: 2; 
  grid-column-end: 3;
   /* podemos emplear el atajo grid-row y grid-column*/
  /*grid-row: grid-row-start grid-row-end*/
  grid-row: 2 / 3;
  grid-column: 2 /3;
  grid-column: 2 / 5;
  /* grid-area: grid-row-start / grid-column-start / grid-row-end / grid-column-end; */
  grid-area: 2 / 2 / 3 / 5;
}

.grid-explicit .item:nth-child(12){
  background-color: aqua;
    /* span - permite posicionar los elementos indicando que el elemento se espande desde su posición por el número
    de celdas indicadas. span 2 desde donde está y una celda más*/
    grid-row: span 2;
    /*grid-row: 3/5;*/
    grid-column: span 3;
}

.grid-explicit .item:nth-child(15){
  background-color: violet;
  grid-row: span 3;
  grid-row: 3 / 6; 

  grid-row: 1 / span 2;
  grid-column: 1 / span 4;

  grid-row: 3 / span 2;
}

/*** Grid por nombre de líneas */

.grid-line-names{
  display: grid;

  /* 3cx3r */
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);

  grid-template-columns: [linea-c1] 1fr [linea-c2] 1fr [linea-c3] 1fr [linea-c4];
  grid-template-rows: [linea-r1] 1fr [linea-r2] 1fr [linea-r3] 1fr [linea-r4];
}

.grid-line-names .item.item:nth-child(3){
  background-color: aquamarine;
  grid-row: linea-r3 / linea-r4; /* 3 /4 */
  grid-column: linea-c1 / linea-c4; /* 1 / 4*/
}


/** Grid áreas */
.grid-areas{
  display: grid;
  /* 2cx3r */
  grid-template-columns: 1fr 200px;
  grid-template-rows: 100px 1fr 60px;
  grid-template-areas: 
    "header header"
    "content sidebar"
    "footer footer";

  grid-template-rows: 100px repeat(2, 1fr) 60px;
  grid-template-areas: 
  "header header"
  "content sidebar"
  "content ."
  "footer footer";
}

.header{
  grid-area: header;
  background-color: aquamarine;
}

.content {
  grid-area: content;
  background-color: antiquewhite;
}

.sidebar {
  grid-area: sidebar;
}

.footer{
  grid-area: footer;
  background-color: darkcyan;
}

@media screen and (max-width: 700px) {
  .grid-areas{
    grid-template-rows: 100px 1fr 200px 60px;

    grid-template-areas: 
    "header header"
    "content content"
    "sidebar sidebar"
    "footer footer";
  }
  
}

/** Grid implícito **/
.grid-implicit {
  display: grid;
  display: inline-grid;
  display: -moz-inline-grid;
  display: -ms-inline-grid;
  width: 40%;

  /* 4cx3r */
  grid-template-columns: repeat(4,1fr);
  grid-template-rows: repeat(3,300px);

  grid-template-rows: repeat(3, minmax(auto,200px));
}

/** Flujo de la Grid **/
.grid-flow{
  display: grid;
  /* 5cx3r */
  grid-template-columns: repeat(5,1fr);
  grid-template-rows: repeat(3,150px);

  grid-auto-flow: row; /* valor predeterminado */
  grid-auto-flow: column;

  grid-auto-flow: row;
  grid-auto-rows: 100px;

  grid-auto-flow: column;
  grid-auto-columns: 300px;
}

/** Flujo denso de la grid **/
.grid-flow-dense{
  display: grid;
  /* 5cx3r */
  grid-template-columns: repeat(5,1fr);
  grid-template-rows: repeat(3,200px);
  grid-auto-flow: row dense;
  grid-auto-flow: column dense;

}

.grid-flow-dense .item:nth-child(11){
  background-color: cadetblue;
  grid-row: span 3;
  grid-column: span 3;
}


/* Grid items en capas (superposición) **/

.grid-layers{
  display: grid;
  /* 4cx4r */
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(4,1fr);
}

.grid-layers .item:nth-child(1){
  background-color: yellow;
  grid-column: 1 / 3;
  grid-column-start: 1;
  grid-column-end: 3;
  grid-row: 1 / 3 ;
  /* grid-row-start / grid-column-start / grid-row-end / grid-column-end */
  grid-area: 1 / 1 / 3 / 3;
}

.grid-layers .item:nth-child(2){
  background-color: blue;
  grid-area: 1 / 3 / 3 / 5;
  grid-column: 3 / 5;
  grid-row: 1 / 3;
}

.grid-layers .item:nth-child(3){
  background-color: green;
  grid-area: 3 / 1 / 5 / 3;
}

.grid-layers .item:nth-child(4){
  background-color: orange;
  grid-area: 3 / 3 / 5 / 5;
}

.grid-layers .item:nth-child(5){
  background-color: rgba(137, 43, 226, 0.765);
  grid-column: 2 / 4;
  grid-row: 2 / 4;
  grid-area: 2 / 2 / 4 / 4;
}

/* Estilos del orden de los items del grid */

.grid-order{
  display: grid;
  /* 3cx2r */
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(2,1fr);
}

.grid-order .item:nth-child(1){
  /* order valor por defecto 0. Permite valores positivos y negativos*/
  order: 1;
}

.grid-order .item:nth-child(2){
  /* order valor por defecto 0. Permite valores positivos y negativos*/
  order: 2;
}

.grid-order .item:nth-child(5){
  /* order valor por defecto 0. Permite valores positivos y negativos*/
  order: -1;
}


/* Alineación de los items de la grid */
.grid-align{
  display: grid;
    /* 3cx2r */
  grid-template-columns: repeat(3, 200px);
  grid-template-rows: repeat(2, 150px);
  /* justify-items alinea mis elementos grid en el eje horizontal(X). Valor defecto strectch */
  justify-items: stretch;
  justify-items: start;
  justify-items: end;
  justify-items: center;
  /* align-items alinea mis elementos grid en el eje vertical(Y). Valor defecto strectch */
  align-items: stretch;
  align-items: start;
  align-items: end;
  align-items: center;

}

.grid-align .item:nth-child(4){
  justify-self: start;
  align-self: start;
}

/* Alineación de Grid Tracks */

.grid-align-tracks{
  display: grid;
   /* 3cx2r */
  grid-template-columns: repeat(3, 100px);
  grid-template-rows: repeat(2, 200px);
  /* justify-contens alinea los tracks de la grid en el eje horizontal(X) */
  justify-content: start;
  justify-content: end;
  justify-content: center;
  justify-content: stretch;
  justify-content: space-between;
  justify-content: space-around;
  justify-content: space-evenly;

  /* aling-contens alinea los tracks de la grid en el eje vertical(Y) */
  align-content: start;
  align-content: end;
  align-content: center;
  align-content: space-between;
  align-content: space-around;
  align-content: space-evenly;
}

/* Definimos tamaño mínimo y máximo de los items */
.grid-min-max{
  display: grid;
  /* 4cx?r */
  grid-template-columns: repeat(4, minmax(100px, 200px));
  /*valor mínimo igual al mínimo del conenido que tenga la celda*/
  grid-template-columns: repeat(4, minmax(min-content, 200px));
  grid-template-columns: repeat(4, minmax(100px, min-content));
  /*valor máximo igual al máximo del conenido que tenga la celda. */
  grid-template-columns: repeat(4, minmax(100px, max-content));
  grid-template-columns: repeat(4, minmax(max-content,200px));
  grid-template-columns: repeat(4, minmax(min-content, max-content));
}

/* Grid con patrones repetitivos */

.grid-repeat{
  display: grid;
    /* 4cx?r */
  grid-template-columns: repeat(4, 10% 20% 30% 40%);
  grid-template-columns: repeat(2, 10% 20% 30% 40%);
  grid-template-columns: repeat(2, 20% 30%);
  grid-template-columns: repeat(2, 50px 100px 150px);
  grid-template-columns: repeat(2, 5rem 8rem 10rem);

  /* 4cx?r */
  grid-template-columns: repeat(2, 100px 200px);
  grid-auto-rows: 150px;
  grid-auto-rows: repeat(2, 100px 200px); /* no funciona */
}

/* Estilos de la grid dinámica */
.grid-dynamics{
  display: grid;
  /* 4cx?r */
  grid-template-columns: repeat(4, 100px);
  /* auto-fill rellena la grid con tracks (filas o columnas) generadas dinámicamente */
  grid-template-columns: repeat(auto-fill, 100px);
  /* auto-fit ajusta la grid con tracks (filas o columnas) existentes.*/
  grid-template-columns: repeat(auto-fit, 100px);
  grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
  grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));

}


/* Estilos para grid Responsive sin Media Queries */

.grid-responsive{
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(auto, 200px));
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
}