//mixins
@use "sass:math";
@use "sass:map";
@use "./variables" as var;
// Mixin para los estilos de los svg
@mixin svg($max-width: 30px,$width:100%,$height:auto,$color){
    max-width: $max-width;
    width: $width;
    height: $height;
    fill: $color;
}

// mixin para maquetar con flex

@mixin flex($direccion: row, $wrap: wrap, $justify: center, $align: center, $gap: null){
    display: flex;
    flex-flow: $direccion $wrap;
    justify-content: $justify;
    align-items: $align;
    align-content: $align;
    gap: $gap;
}

// mixin para el maquetado con grid
@mixin grid($columnas, $filas:null, $justify-content: center, $justify-items: null, $align-content: center, $align-items: null, $gap: null){
    display: grid;
    grid-template-columns: $columnas;
    grid-template-rows: $filas;
    justify-content: $justify-content;
    justify-items: $justify-items;
    align-content: $align-content;
    align-items: $align-items;
    gap: $gap;
}

// mixin para media querie desde tablet
@mixin escritorio{
    @media screen and (min-width: 720px) {
        @content;
    }
}

// mixin para los tÃ­tulos
@mixin titulos($tipo) {
    $valor: var.$tam-h1 * 1rem;
    @if $tipo > 1 {
        @if $tipo == 2 {
            $valor: var.$tam-h1 - 0.5rem;
        } @else if $tipo == 3 {
            $valor: math.div(var.$tam-h1, 1.5) * 1rem;
        } @else {
            $valor: math.div(var.$tam-h1, 2) * 1rem;
        }
    }
    font-size: $valor;
}

// mixin color fondo - texto
@mixin colorFondoTexto($fondo, $texto){
    background-color: $fondo;
    color: $texto;
}

@mixin ancho-alto($ancho: 100%, $alto: 100%){
    width: $ancho;
    height: $alto;
}

@mixin fuente($fuente, $tam, $weigh: "regular"){
    font-family: $fuente;
    $font-size: $tam;
    font-weight: map.get(var.$font-weghts, $weigh);
}


// mixin tranform
@mixin transform($propiedades...){
    // -ms-transform: $propiedades;
    // -o-transform: $propiedades;
    // -moz-transform: $propiedades;
    // -webkit-transform: $propiedades;
    @each $name, $valor in var.$prefixes{
        -#{$valor}-transform: $propiedades;
    }
    transform: $propiedades;
}

// mixin transition
@mixin transition($propiedades...){
    // -ms-transition: $propiedades;
    // -o-transition: $propiedades;
    // -moz-transition: $propiedades;
    // -webkit-transition: $propiedades;
    @each $name, $valor in var.$prefixes{
        -#{$valor}-transition: $propiedades;
    }
    transition: $propiedades;
}