.bird {
  background-image: url("../img/bird-cells-new.svg");
  background-size: auto 100%;
  width: 88px;
  height: 125px;
  /* will-change optimiza las animaciones al permitir que el navegador sepa qué propiedades 
  y elementos están a punto de ser manipulados, aumentando potencialmente el rendimiento de esa operación en particular.*/
  will-change: background-position;
  -webkit-animation-name: fly-cycle;
  animation-name: fly-cycle;
  /*steps()es una función de temporización que nos permite dividir una animación o transición en segmentos, 
  en lugar de una transición continua de un estado a otro. 
  La función toma dos parámetros: el primero especifica el número positivo de pasos que queremos que 
  tome nuestra animación.
  steps(<number_of_steps>, <direction>)
  En este caso solo pasamos uno por lo tanto indica que los pasos se hacen cada 10 segmentos,
  tantos como pájaros tiene el svg original*/
  /* creamos una animación con continuidad infinita que muestre cada transición de la imagen del pájaro*/

  -webkit-animation-timing-function: steps(10);
  animation-timing-function: steps(10);
  -webkit-animation-iteration-count: infinite;
  animation-iteration-count: infinite;
}

.bird--one {
  -webkit-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-delay: -0.5s;
  animation-delay: -0.5s;
}

.bird--two {
  -webkit-animation-duration: 0.9s;
  animation-duration: 0.9s;
  -webkit-animation-delay: -0.75s;
  animation-delay: -0.75s;
}

.bird--three {
  -webkit-animation-duration: 1.25s;
  animation-duration: 1.25s;
  -webkit-animation-delay: -0.25s;
  animation-delay: -0.25s;
}

.bird--four {
  -webkit-animation-duration: 1.1s;
  animation-duration: 1.1s;
  -webkit-animation-delay: -0.5s;
  animation-delay: -0.5s;
}

.bird-container {
  position: absolute;
  top: 20%;
  left: -10%;
  -webkit-transform: scale(0) translateX(-10vw);
  transform: scale(0) translateX(-10vw);
  -moz-transform: scale(0) translateX(-10vw);
  -o-transform: scale(0) translateX(-10vw);

  /*Esto permitirá que el navegador prepare la transición 
        con anticipación y permitirá transiciones rápidas entre las páginas
         tan pronto como se presione la tecla. Pero will-change cuidado con
          la propiedad will-change directamente en las hojas de estilo. 
          Puede hacer que el navegador mantenga la optimización en la 
          memoria durante mucho más tiempo del necesario.
          Esto es, lo que hace es facilitar el rendimiento del navegador (UA)
           a la hora de manejar las páginas y su renderizado, pues de antemano 
           sabe qué elementos van a sufrir qué cambios
           y de esta manera estar preparado para cuando sucedan. */
  will-change: transform;
  /* -webkit-animation-name: fly-right-one;
            animation-name: fly-right-one;
    -webkit-animation-timing-function: linear;
            animation-timing-function: linear;
    -webkit-animation-iteration-count: infinite;
            animation-iteration-count: infinite; */

  animation: fly-right-one linear infinite;
  -webkit-animation: fly-right-one linear infinite;
  -o-animation: fly-right-one linear infinite;
  -moz-animation: fly-right-one linear infinite;
}

.bird-container--one {
  -webkit-animation-duration: 15s;
  animation-duration: 15s;
  -webkit-animation-delay: 0;
  animation-delay: 0;
}

.bird-container--two {
  -webkit-animation-duration: 16s;
  animation-duration: 16s;
  -webkit-animation-delay: 1s;
  animation-delay: 1s;
}

.bird-container--three {
  -webkit-animation-duration: 14.6s;
  animation-duration: 14.6s;
  -webkit-animation-delay: 9.5s;
  animation-delay: 9.5s;
}

.bird-container--four {
  -webkit-animation-duration: 16s;
  animation-duration: 16s;
  -webkit-animation-delay: 10.25s;
  animation-delay: 10.25s;
}

@keyframes fly-cycle {
  100% {
    /*La propiedad background-position controla la posición en la que se muestra la imagen de fondo de
  un elemento. Por defecto, las imágenes de fondo que no se repiten se muestran en la esquina superior
  izquierda del elemento. Si la imagen de fondo se repite horizontalmente, se muestra en la parte superior
  del elemento y si se repite verticalmente, se muestra en la parte izquierda del elemento.
  Si sólo se indica un valor en la propiedad background-position, se considera que el segundo valor es center,
  que equivale al porcentaje 50%.
  900px 0 -900px como hemos dividido la animación en 10, mostrará cada
  movimiento del pájaro hasta llegar al final donde se muestra desplazado el fondo 900px*/
    /* background-position: -900px; */
    background-position: 900px;
  }
}

@-webkit-keyframes fly-right-one {
  0% {
    -webkit-transform: scale(0.3) translateX(-10vw);
    transform: scale(0.3) translateX(-10vw);
  }

  10% {
    -webkit-transform: translateY(2vh) translateX(10vw) scale(0.4);
    transform: translateY(2vh) translateX(10vw) scale(0.4);
  }

  20% {
    -webkit-transform: translateY(0vh) translateX(30vw) scale(0.5);
    transform: translateY(0vh) translateX(30vw) scale(0.5);
  }

  30% {
    -webkit-transform: translateY(4vh) translateX(50vw) scale(0.6);
    transform: translateY(4vh) translateX(50vw) scale(0.6);
  }

  40% {
    -webkit-transform: translateY(2vh) translateX(70vw) scale(0.6);
    transform: translateY(2vh) translateX(70vw) scale(0.6);
  }

  50% {
    -webkit-transform: translateY(0vh) translateX(90vw) scale(0.6);
    transform: translateY(0vh) translateX(90vw) scale(0.6);
  }

  60% {
    -webkit-transform: translateY(0vh) translateX(110vw) scale(0.6);
    transform: translateY(0vh) translateX(110vw) scale(0.6);
  }

  100% {
    -webkit-transform: translateY(0vh) translateX(110vw) scale(0.6);
    transform: translateY(0vh) translateX(110vw) scale(0.6);
  }
}

@keyframes fly-right-one {
  0% {
    -webkit-transform: scale(0.3) translateX(-10vw);
    transform: scale(0.3) translateX(-10vw);
  }

  10% {
    -webkit-transform: translateY(2vh) translateX(10vw) scale(0.4);
    transform: translateY(2vh) translateX(10vw) scale(0.4);
  }

  20% {
    -webkit-transform: translateY(0vh) translateX(30vw) scale(0.5);
    transform: translateY(0vh) translateX(30vw) scale(0.5);
  }

  30% {
    -webkit-transform: translateY(4vh) translateX(50vw) scale(0.6);
    transform: translateY(4vh) translateX(50vw) scale(0.6);
  }

  40% {
    -webkit-transform: translateY(2vh) translateX(70vw) scale(0.6);
    transform: translateY(2vh) translateX(70vw) scale(0.6);
  }

  50% {
    -webkit-transform: translateY(0vh) translateX(90vw) scale(0.6);
    transform: translateY(0vh) translateX(90vw) scale(0.6);
  }

  60% {
    -webkit-transform: translateY(0vh) translateX(110vw) scale(0.6);
    transform: translateY(0vh) translateX(110vw) scale(0.6);
  }

  100% {
    -webkit-transform: translateY(0vh) translateX(110vw) scale(0.6);
    transform: translateY(0vh) translateX(110vw) scale(0.6);
  }
}

@-webkit-keyframes fly-right-two {
  0% {
    -webkit-transform: translateY(-2vh) translateX(-10vw) scale(0.5);
    transform: translateY(-2vh) translateX(-10vw) scale(0.5);
  }

  10% {
    -webkit-transform: translateY(0vh) translateX(10vw) scale(0.4);
    transform: translateY(0vh) translateX(10vw) scale(0.4);
  }

  20% {
    -webkit-transform: translateY(-4vh) translateX(30vw) scale(0.6);
    transform: translateY(-4vh) translateX(30vw) scale(0.6);
  }

  30% {
    -webkit-transform: translateY(1vh) translateX(50vw) scale(0.45);
    transform: translateY(1vh) translateX(50vw) scale(0.45);
  }

  40% {
    -webkit-transform: translateY(-2.5vh) translateX(70vw) scale(0.5);
    transform: translateY(-2.5vh) translateX(70vw) scale(0.5);
  }

  50% {
    -webkit-transform: translateY(0vh) translateX(90vw) scale(0.45);
    transform: translateY(0vh) translateX(90vw) scale(0.45);
  }

  51% {
    -webkit-transform: translateY(0vh) translateX(110vw) scale(0.45);
    transform: translateY(0vh) translateX(110vw) scale(0.45);
  }

  100% {
    -webkit-transform: translateY(0vh) translateX(110vw) scale(0.45);
    transform: translateY(0vh) translateX(110vw) scale(0.45);
  }
}

@keyframes fly-right-two {
  0% {
    -webkit-transform: translateY(-2vh) translateX(-10vw) scale(0.5);
    transform: translateY(-2vh) translateX(-10vw) scale(0.5);
  }

  10% {
    -webkit-transform: translateY(0vh) translateX(10vw) scale(0.4);
    transform: translateY(0vh) translateX(10vw) scale(0.4);
  }

  20% {
    -webkit-transform: translateY(-4vh) translateX(30vw) scale(0.6);
    transform: translateY(-4vh) translateX(30vw) scale(0.6);
  }

  30% {
    -webkit-transform: translateY(1vh) translateX(50vw) scale(0.45);
    transform: translateY(1vh) translateX(50vw) scale(0.45);
  }

  40% {
    -webkit-transform: translateY(-2.5vh) translateX(70vw) scale(0.5);
    transform: translateY(-2.5vh) translateX(70vw) scale(0.5);
  }

  50% {
    -webkit-transform: translateY(0vh) translateX(90vw) scale(0.45);
    transform: translateY(0vh) translateX(90vw) scale(0.45);
  }

  51% {
    -webkit-transform: translateY(0vh) translateX(110vw) scale(0.45);
    transform: translateY(0vh) translateX(110vw) scale(0.45);
  }

  100% {
    -webkit-transform: translateY(0vh) translateX(110vw) scale(0.45);
    transform: translateY(0vh) translateX(110vw) scale(0.45);
  }
}